'use strict';

var fs = require('fs');
var path = require('path');
var util = require('util');
var yeoman = require('yeoman-generator');

var MochaGenerator = module.exports = function MochaGenerator(args, options) {
  yeoman.generators.Base.apply(this, arguments);
  this.sourceRoot(path.join(__dirname, '../../', 'templates'));

  this.on('end', function () {
    this.installDependencies({
      npm: true,
      skipInstall: options['skip-install']
    });
  });
};

util.inherits(MochaGenerator, yeoman.generators.Base);

MochaGenerator.prototype.setupEnv = function setupEnv() {
  this.copy('_bower.json', 'bower.json');
  this.copy('_package.json', 'package.json');
  this.copy('gulpfile.js', 'gulpfile.js');
  this.copy('sample.js', 'src/sample.js');
  this.copy('sample_spec.js', 'test/sample_spec.js');
  this.copy('testem.mustache', 'test/testem.mustache');
  this.copy('testem.json', 'testem.json');

  fs.appendFileSync('.gitignore',
    (fs.existsSync('.gitignore') ? '\n' : '') +
    'test/bower_components\n\n' +
    '# Log files generated by Testem\n' +
    'testem.*.json\n' +
    'tests.tap\n' +
    'libpeerconnection.log\n'
  );
};
